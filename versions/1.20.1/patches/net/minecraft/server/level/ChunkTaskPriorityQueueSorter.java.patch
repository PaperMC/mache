--- a/net/minecraft/server/level/ChunkTaskPriorityQueueSorter.java
+++ b/net/minecraft/server/level/ChunkTaskPriorityQueueSorter.java
@@ -103,7 +103,7 @@
     public void onLevelChange(ChunkPos pos, IntSupplier levelGetter, int targetLevel, IntConsumer levelSetter) {
         this.mailbox.tell(new StrictQueue.IntRunnable(0, () -> {
             int ix = levelGetter.getAsInt();
-            this.queues.values().forEach(queue -> queue.resortChunkTasks(i, pos, targetLevel));
+            this.queues.values().forEach(queue -> queue.resortChunkTasks(ix, pos, targetLevel));
             levelSetter.accept(targetLevel);
         }));
     }
@@ -156,7 +156,7 @@
         if (chunktaskpriorityqueue == null) {
             throw (IllegalArgumentException)Util.pauseInIde(new IllegalArgumentException("No queue for: " + actor));
         } else {
-            return chunktaskpriorityqueue;
+            return (ChunkTaskPriorityQueue<Function<ProcessorHandle<Unit>, T>>) chunktaskpriorityqueue;
         }
     }
 
